clear
cargo
cargo install dust
nvim 
htop
sudo pacman -S docker
sudo pacman -S gnome-terminal
sudo pacman -D gnome-terminal
sudo pacman -h
sudo pacman -R gnome-terminal
sudo pacman -S docker
docker --vrsion
docker -v
sudo pacman -S docker-desktop
sudo pacman -S gnome-terminal
sudo pacman -U ./docker-desktop-4.25.0-x86_64.pkg.tar.zst
systemctl enable docker-desktop
systemctl start docker-desktop
systemctl --user start docker-desktop
systemctl --user enable docker-desktop
docker compose
flatpak 
flatpak -h
flatpak list
pass
python3 --version 
clear 
chsh 
type nu
whereis nu
chsh
nu
nu --help 
cargo install just
just
clear
type nu
tyclear
clear
whereis nu
echo $nu.env-path
nvim /home/achraf/.config/nushell/env.nu
nvim /home/achraf/.config/nushell/config.nu
nvim /home/achraf/.config/nushell/env.nu
nu -h
nu -h |rg banner
nu -h | grep banner
nvim /home/achraf/.config/nushell/config.nu
config --help 
config env
config nu
nvim /home/achraf/.config/nushell/config.nu
nvim /home/achraf/.config/nushell/env.nu
config nu
nvim /home/achraf/.config/nushell/env.nu
config set env.EDITOR "nvim"
config set env.EDITOR
config --help 
config env set env.EDITOR
config env 
config env --help 
config env.EDITOR "nvim"
config nu 
nvim /home/achraf/.config/nushell/env.nu
clear
neovide
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 && nvim
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 and nvim
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 
nvim
neovide
neovide test.py
htop
sudo pacman -S tmux 
q
tmux
cargo install zellij 
zellij 
zellij --help
zellij list-seesions
zellij list-sessions
sudo pacman -S nodejs
npm
sudo pacman -S npm
sudo pacman -S go
neovide test.py
sudo pacman -S fzf
fzf
nvim test.py
nvim test0.py
nvim test0.rs
nvim test0.go
nvim test0.rs
cd .config/
ls
cd nvim/
rg rust
rg rust . 
rg
rg . rust
rg -r rust .
rg -r rust-analyzer .
rg  rust-analyzer .
rg 'rust-analyzer' .
rg 'gopl' .
rg 'rust' .
clear
ollama list
ollama pull dolphin2.1-mistral
ollama list
ollama run dolphin2.1-mistral
ollam run dolphin2.2-mistral
ollama run dolphin2.2-mistral
htop 
ollama run dolphin2.2-mistral
ollama run llama2-uncensored
ollama 
ollama run --help 
ollama run llama2-uncensored --verbose
journalctl -u ollama<\n>
gpg-agent 
pass
pass init
pass insert work/test
gpg
gpg --version 
gpg --full-generate-key<\n>
ls
cd
gnu achraf
gpg achraf
gpg
gpg --list-secret-keys
pass init 
pass init achraf
ls -la 
cd .password-store/
ls
cd work/
ls
pass insert work/test
ls
cat test.gpg
ls
cd ..
ls
xdg-open --help 
xdg-settings 
xdg-settings --help
xdg-settings --list 
type xdg-open 
which xdg-open 
file /usr/bin/xdg-open
nvim /usr/bin/xdg-open
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
nu config
htop
docker ps 
systemctl status docker
systemctl enable docker
systemctl start docker
htop
systemctl --user disable docker-desktop
clear
git clone https://github.com/ryanoasis/nerd-fonts.git
ls
vim /home/achraf/.config/nushell/config.nu
nvim /home/achraf/.config/nushell/config.nu
cler
clear
ls
:q
clear
sudo pacman -S fzf
fzf
:q
clear
ls
r
clear
cmear
ls
nu config
nu conf
nvim /home/achraf/.config/nushell/config.nu
clear
nvim /home/achraf/.config/nushell/env.nu
echo $nu.path
nu get  $nu.path
nu get  $nu.env-path
nu -- help 
nu --help 
nu config --help 
nu --config --help 
nu set --help
nu --version 
$env
$env.path
$env.PATH
$env.PATH | split row (char esep)
($env.PATH | split row (char esep))
pwd
ls
mkdir bin
ls
pwd
$env.PATH = ($env.PATH | split row (char esep) | append "/home/achraf/bin")
($env.PATH | split row (char esep))
sudo install Desktop/glab bin/glab
glab
ksldk
clear
sudo pacman -S
cd Desktop/
code test_httpx_async.py
/bin/python /home/achraf/Desktop/test_httpx_async.py
clear
/bin/python /home/achraf/Desktop/test_httpx_async.py
clear
clear
mkdir verif_data
mv test_httpx_async.py verif_data/
code verif_data/
pip install httpx 
virtualenv venv 
clear
python --version 
python -m virtualenv venv
type pip 
describe pip 
which pip 
pi 
pip 
pip install virtualenv
sudo pip install httpx 
sudo pacman -S python-httpx 
sudo pacman -S python-pandas 
/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
sudo pacman -S python-tqdm 
/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
sudo pacman -S python-openpyxl
/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
clear
/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
clear
/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
clear
htop
clear
ls
cd verif_data/
ls
python test_httpx_async.py
/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
sudo pacman -S python-virtualenv
virtualenv venv
pip freeze 
source venv/bin/activate
clear
venv/bin/activate
bash venv/bin/activate
overlay use /home/achraf/Desktop/verif_data/venv/bin/activate.nu/home/achraf/Desktop/verif_data/venv/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
clear
/home/achraf/Desktop/verif_data/venv/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
clear
/home/achraf/Desktop/verif_data/venv/bin/python /home/achraf/Desktop/verif_data/test_httpx_async.py
ls
clear
ls
pacman -S fwupdmgr 
sudo pacman -S fwupdmgr 
sudo pacman -S fwupd
fwupdmgr 
fwupdmgr --help 
sudo fwupdmgr update
ollama run stablelm-zephyr 
ollama list
ollama remove 7c596e78b1fc
ollama delete 7c596e78b1fc
ollama --help 
ollama rm 7c596e78b1fc
ollama list
ollama rm stablelm-zephyr:latest
clear
nvidia-smi -l 1
clear
nvidia-smi -l 1
clear
htop
sudo pacman -S stacher
nvidia-smi -l 1
deb
sudo pacman -S snapd<\n>
sudo systemctl enable --now snapd.socket
sudo ln -s /var/lib/snapd/snap /snap<\n>
sudo snap install snap-store
snap-store
snap 
snap install stacher
sudo snap install snap-store
snap install stacher
snap install stacherio
snap --help 
snap --help --all 
snap help --all 
snap help --all | grep search 
snap find stacher
clear
htop 
pkill ollama
sudo pkill ollama
pkill ollama
htop 
xdg-open 
xdg-open  .
config nu 
open .
ls 
clear
htop 
clear
vim .config/alacritty/alacritty.yml
mkdir .config/alacritty/
vim .config/alacritty/alacritty.yml
vim
nvim $$
nvim .config/alacritty/alacritty.yml
clear
htop
ls
clear
ls
clear
nvim .config/alacritty/alacritty.yml
clear
ls
clear
nvim .config/alacritty/alacritty.yml
clear
nvim .config/alacritty/alacritty.yml
clear
ls
clear
ls 
nvim .config/alacritty/alacritty.yml
sudo pacman -S ttf-jetbrains-mono-nerd
nvim .config/alacritty/alacritty.yml
sudo pacman -S ttf-jetbrains-mono-nerd
nvim .config/alacritty/alacritty.yml
c
clear
nvim
sudo pacman -S compiz
sudo pacman --help 
sudo pacman --Q compiz 
sudo pacman -Q compiz 
sudo pacman -Q Compiz 
clear
cd Desktop/
ls
tar -xf compiz-0.9.14.2.tar.xz
ls
cd compiz-0.9.14.2/
ls
make 
clear
ls
make
bash 
sudo pacman -S make 
make
clear
ls
just
vim INSTALL
nvim INSTALL
neovide INSTALL
clear
mkdir build 
cd build 
cmake .. 
sudo pacman -Ucmake
sudo pacman -U cmake
sudo pacman -S PkgConfig
sudo pacman -S pkgconfig
cmake .. 
ls
clear
ls
Ã htop
make
make install 
cd ../..
clear
rm -fr compiz-0.9.14.2/
clear
ls
rm compiz-0.9.14.2.tar.xz
clear
ls
vim `fix slow boot.txt`
clear
ls
clear
ls
cd code/
clear
ls
git clone git@github.com:FractalDesigns/dotfiles.git
cd
ls .ssh/
ssh-keygen 
ls
ls .ssh/
cat .ssh/id_ed25519.pub
clear
htop
clear
cat .ssh/id_ed25519.pub
git clone git@github.com:FractalDesigns/dotfiles.git
pwd
ls
rm -fr dotfiles/
clear
ls
stow
sudo pacman -S pkgconfig
sudo pacman -S stow 
stow 
clear
ls
cd code 
ls
git clone git@github.com:FractalDesigns/dotfiles.git
clear
ls
cd dotfiles/
ls
vim README.md
config nu 
vim 
source ../../.config/nushell/config.nu
vim
clear
ls
vim README.md
clear
git status 
coear
clear
htop 
clear
ls
vim README.md
clear
ls
clear
ls
systemctl status yakuake
htop 
redshift -O 3500
clear
vim .config/alacritty/alacritty.yml
ls
clear
vim 
clear
nvim
fzf
type fzf
locate fzf
where fzf
get fzf
which fzf
clear
vim 
htop
clear
clear
cd code/
ls
git clone git@github.com:FractalDesigns/obsidian.git 
ls
clear
ls
clear
ls
vim test.py
clear
vim test.py
neovide test.py
ollama run dolphin-mixtral
ollama --help 
ollama --update
ollama update
pacmman -SU ollama 
pacmman -S ollama 
pacman 
pacman -S ollama
sudo pacman -S ollama
type ollama
ollama --version 
which ollama
sudo pacman -S ollama
ollama --version 
which ollama
mv /usr/local/bin/ollama usr/local/bin/ollama-old
mv /usr/local/bin/ollama /usr/local/bin/ollama-old
sudo mv /usr/local/bin/ollama /usr/local/bin/ollama-old
ollama --version 
ollama run dolphin-mixtral
ollama pull dolphin-mixtral:latest
ollama run dolphin-mixtral
ollama serve
ollama run dolphin-mixtral
clear
ls
clear
ls
clear
ollama run dolphin-mixtral
ollama serve
pass
pass test
pass work test
pass work test --help
ollama run dolphin-mixtral
htop
ollama list 
ollama --help 
ollama list 
ollama rm c0a7e661bf0f 
ollama rm dolphin-mixtral
ollama list 
celar
ollama serve
clear
pacman -S teamviewer
sudo pacman -S teamviewer
sudo systemctl enable teamviewerd
teamviewer --daemon start 
xbindkeys
sudo pacman -S xbindkeys 
dig 1337x.to  
sudo pacman -S dig 
sudo pacman -S bind-utils
sudo pacman -S dnsutils
dig 1337x.to  
dig 1337x.to +short
dig thepiratebay.org +short
ssh 192.168.1.25
ssh achraf@192.168.1.25
bash
ssh achraf@192.168.1.25
clear
xbindkeys 
touch ~/.xbindkeysrc
clear
vim ~/.xbindkeysrc
xbindkeys 
sudo pacman -S sxhkd
clear
pkill xbindkeys
xbindkeys
pkill xbindkeys
vim ~/.config/sxhkd/sxhkdrc
touch  ~/.config/sxhkd/sxhkdrc
touch -p ~/.config/sxhkd/sxhkdrc
mkdir ~/.config/sxhkd/
vim ~/.config/sxhkd/sxhkdrc
sxhkd 
vim ~/.config/sxhkd/sxhkdrc
sxhkd 
vim ~/.config/sxhkd/sxhkdrc
sxhkd 
vim ~/.config/sxhkd/sxhkdrc
sxhkd 
vim ~/.config/sxhkd/sxhkdrc
xbindkeys 
clear
ls
clear
ls
clear
ls
cd code/
ls
cd dotfiles/
ls
clear
ls
systemctl status xbindkeys
xbindkeys --help 
xbindkeys --verbose 
xbindkeys --show 
clear
cd
cd /etc/systemd/user/
ls
clear
ls
systemctl status pipewire-session-manager
systemctl status pipewire-session-manager.service
vim pipewire-session-manager.service
systemctl status pipewire
systemctl status 
clear
cd ..
ls
cd system/
ls
clear
ls
clear
cd ../user/
ls
vim xbindkeys.service
whoami 
sudo vim xbindkeys.service
sudo vi xbindkeys.service
sudo nvim xbindkeys.service
systemctl status xbindkeys
systemctl enable xbindkeys
ls
sudo nvim xbindkeys.service
mv xbindkeys.service ../system/
mv xbindkeys.service ../system
mv xbindkeys.service ../system/xbindkeys.service
sudo mv xbindkeys.service ../system/xbindkeys.service
systemctl enable xbindkeys
systemctl status xbindkeys
systemctl start xbindkeys
systemctl status xbindkeys
pkill xbindkeys
systemctl status xbindkeys
systemctl start xbindkeys
systemctl status xbindkeys
journalctl
journalctl | grep xbindkeys
clear
cd ../system/
vim xbindkeys.service
sudo nvim xbindkeys.service
systemctl start xbindkeys
systemctl status xbindkeys
systemctl enable xbindkeys
systemctl status xbindkeys
systemctl start xbindkeys
systemctl status xbindkeys
ps aux | grep xbindke
ps aux
ps
ps au
ps --help 
ps | where name=~ 'xbindkeys' 
ps | where name =~ 'xbindkeys' 
ps | where name =~ 'xbindk' 
ps | grep xbindkeys
clear
xbindkeys --help 
vim xbindkeys.service
sudo nvim xbindkeys.service
systemctl status xbindkeys
systemctl start xbindkeys
systemctl daemon-reload
systemctl start xbindkeys
systemctl status xbindkeys
clear
xbindkeys -n 
systemctl status xbindkeys
journalctl | grep xbindkeys
journalctl 
journalctl -u xbindkeys 
journalctl --help 
clear
vim xbindkeys.service
ls -l /var/lib/systemd/coredump/
ls -l /var/lib/systemd/coredump/core.xbindkeys.0.b71265e309034805bd2106bab0086fe5.81191.1705785393000000.zst
cat /var/lib/systemd/coredump/core.xbindkeys.0.b71265e309034805bd2106bab0086fe5.81191.1705785393000000.zst
sudo cat /var/lib/systemd/coredump/core.xbindkeys.0.b71265e309034805bd2106bab0086fe5.81191.1705785393000000.zst
gdb xbindkeys /var/lib/systemd/coredump/core.xbindkeys.0.b71265e309034805bd2106bab0086fe5.81191.1705785393000000.zst
gdb
sudo pacman -S gdb 
gdb xbindkeys /var/lib/systemd/coredump/core.xbindkeys.0.b71265e309034805bd2106bab0086fe5.81191.1705785393000000.zst
sudo gdb xbindkeys /var/lib/systemd/coredump/core.xbindkeys.0.b71265e309034805bd2106bab0086fe5.81191.1705785393000000.zst
clear
ls
which xbindkeys
clear
rm xbindkeys.service
sudo rm xbindkeys.service
clear
systemctl status xbindkeys
systemctl disable xbindkeys
clear
alacritty migrate
clear
cd code/dotfiles/
vim README.md
ls
clear
git clone https://github.com/omerxx/dotfiles.git  test 
ls
mv test/* ./
ls
tm -fr test/
rm -fr test/
clear
ls
git remote status 
git remote README.md
git remote
git remote orgin 
git remote orgin get-url 
git remote origin -v
git remote -v
git status
clear
ls
:q
zellij 
ls ssh/
cat ssh/ssh-config
clear
ls
clear
vim .config/autostart/xbindkeys.desktop
cp autostart/ code/dotfiles/
cp -r autostart/ code/dotfiles/
cp -r autostart code/dotfiles/
cp .config/autostart/ code/dotfiles/
cp -r .config/autostart/ code/dotfiles/
cat code/dotfiles/
clear
ls
clear
mkdir .config/xbindkeys/
cp .xbindkeysrc .config/xbindkeys/
cp -r .config/xbindkeys/ code/dotfiles/
ls .config/xbindkeys/ 
cp .xbindkeysrc .config/xbindkeys/
cp -r .config/xbindkeys/ code/dotfiles/
clear
ls code/dotfiles/xbindkeys/
ls .config/xbindkeys/ 
cp .xbindkeysrc .config/xbindkeys/
ls .config/xbindkeys/ 
cp .xbindkeysrc .config/xbindkeys
ls .config/xbindkeys/ 
cp .xbindkeysrc .config/xbindkeys
cp .xbindkeysrc .config/xbindkeys/.xbindkeysrc
ls .config/xbindkeys/ 
ls -a .config/xbindkeys/ 
ls -a code/dotfiles/xbindkeys/
clear
stow 
clear
vim .config/autostart/
xbindkeys --help 
vim .config/autostart/xbindkeys.desktop
vim .config/autostart/xbindkeys.desktop
cp .config/autostart/xbindkeys.desktop code/dotfiles/autostart/xbindkeys.desktop
clear
cat code/dotfiles/autostart/xbindkeys.desktop
:q
clear
ls
vim .config/alacritty/alacritty.toml
mkdir code/dotfiles/alacritty
cp .config/alacritty/alacritty.toml code/dotfiles/alacritty/alacritty.toml
ls .config 
clear
ls
mkdir source1 
touch source1/test1
cat code/dotfiles/README.md
stow --target target1 source1
mkdir target1
stow --target target1 source1
ls target1/
clear
ls
touch source1/test2
ls target1/
stow --target target1 source1
ls target1/
touch target1/test3
ls source1
stow --target target1 source1
ls source1
ls target1/
vim target1/test2
clear
vim source1/test2
clear
rm -fr source1/ target1/
clear
ls
cd code/dotfiles/
ls
git add . 
git status 
git commit -m 'update'
git config --global user.email "elafrit.achraf@gmail.com"
git config --global user.name "Achraf"
git commit -m 'update'
git push 
vim Justfile
cat README.md
vim Justfile
just install 
ls ~/.config/
just install 
cd
cd .config/
mv alacritty alacritty_old
mv autostart autostart_old
mv nvim nvim_old
mv xbindkeys xbindkeys_old
cd
cd code/dotfiles/
just install
zellij 
clear
cd
ls
vim .config/zellij/config.kdl
zellij 
vim .config/zellij/config.kdl
zellij 
vim .config/zellij/config.kdl
pwd
vim .config/zellij/config.kdl
clear
ls
clear
:q
tmux
zellij 
clear
ls ~/.config/
ls la ~/.config/
ls -la ~/.config/
clear
vim 
cd ~/.config/
ls
cd nvim/ls
cd nvim
ls
vim init.lua
cat lazy-lock.json
clear
ls
cd lua/
ls
cd config/
ls
clear
ls
vim dadbod.lua
cd Videos/
ls
vlc `2024-01-21 02-52-46.mkv`
clear
cd
cd .config/nvim/ls
cd .config/nvim/
grep harpoon . 
grep -r harpoon . 
vim 
pacman -S clangd 
sudo pacman -S clangd 
sudo pacman -S clang
vim 
clear
ls
vim lua/plugins/obsidian.lua
vim lua/options.lua
ls spell/
cd lua/
ls
clear
ls
vim misc.lua
cd config/
ls
cd ..
grep -r mason .
vim plugins/lsp.lua
clear
vim plugins/lsp.lua
ls -la plugins/lsp.lua
git status
git add * 
git status 
cd .. 
cd ..
git add . 
git status 
git commit -m 'remove clangd'
git push 
cd ..
ls
rustup update
clear
cd
clear
vim .config/nvim/lua/plugins/lsp.lua
clear
ls
clear
cd code/
celar
clear
ls
git clone git@github.com:FractalDesigns/learning_rust.git 
clear
ls
cd learning_rust/
ls
cargo run 
clear
ls
vim src/main.rs
cargo run 
clear
ls
vim Cargo.toml
cargo run ex1 
cargo run --bin ex1 
cle
cargo run --bin ex2
clear
ls
cd src/
ls
cd ..
vim Cargo.toml
vim src/ex1.rs
clear
cd
vim .config/nvim/init.lua
grep -r indent-blankline .
grep -r indent-blankline .config/
vim .config/nvim/init.lua
rg
rg -r indent-blankline .config/
clear
rg -r indent-blankline .config/nvim/
rg -r indent .config/nvim/
clear
ls
ls .nv/
ls .nv/ComputeCache/
ls -a  .nv/ComputeCache/
clear
rg -r ibl .config/nvim/
grep -r ibl .config/nvim/
clear
grep -r ibl .config/nvim/
vim .config/nvim/lua/plugins/lsp.lua
grep -r main .config/nvim/
clear
grep -r main .config/nvim/
vim .config/nvim/lazy-lock.json
vim .config/nvim/init.lua
:q
clear
vim
clear
ls
clear
vim .config/wezterm/wezterm.lua
clear
ls
cd code/
ls
neovide learning_rust/
clear
ls
clear
ls
cd ../.config/
ls
clear
ls
clear
ls
mv nvim nvim_min_old
mv nvim_old/ nvim
clear
nvim
clear
ls
cp -r nvim ../code/dotfiles/
clear
cd
clear
ls
cmear
clear
ls
cd code/dotfiles/
clear
ls
git status 
clear
just install 
clear
cd ..
ls
cd -
mv ~/.config/nvim nvim_bis
just install 
vim 
vim
ls ~/.config/nvim
rm ~/.config/nvim_bis/
rm -fr ~/.config/nvim_bis/
rm ~/.config/nvim_bis
rm ~/.config/nvim_min_old/
rm -fr ~/.config/nvim_min_old/
rm -f ~/.config/nvim_min_old/
rm  ~/.config/nvim_min_old
clear
git status
ls nvim/
nvim
type rm 
which rm 
ls
clear
ls
clear
ls
ls nvim_bis/
rm -fr nvim nvim_bis/ 
clear
ls
git staus 
gs
clear
git status
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 && nvim<\n>
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 
nvim
cd ../../.config/
ls
rm nvim
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 && nvim<\n>
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 
nvim 
ls ~/.local/share/nvim
rm -rf ~/.local/share/nvim
rm -fr nvim/
git clone https://github.com/NvChad/NvChad ~/.config/nvim --depth 1 
nvim 
unzip
zip
pacman -S zip
sudo pacman -S zip
unzip
sudo pacman -S unzip
unzip
nvim 
nvim
config nu 
config 
config env
clear
ls
vim nvim/lua/core/init.lua
clear
vim wezterm/wezterm.lua
vim alacritty/alacritty.toml
vim wezterm/wezterm.lua
vim
clear
ls
cd code/obsidian/
git status
git stash 
git pull 
git stash pop 
git stash
git reset 
git reset HEAD
git reset hard
git merge abort
clear
git status 
git origin remote 
git origin 
git remote 
git remote -v
cd ..
rm -fr obsidian/
git clone git@github.com:FractalDesigns/obsidian.git 
cd
config nu 
dotfiles 
clear
ls
ls .config/autostart/
clear
code 
cd code/learning_rust
ls
neovide .
ls
cd .config/
cd nushell/
ls
cd ..
cp nushell/ ../code/dotfiles/
bash
clear
ls
clear
ls
clear
cd -
git status
git add *
git status
